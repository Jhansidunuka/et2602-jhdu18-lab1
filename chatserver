#!/usr/bin/python3
import socket
import sys
from _thread import *
import select 
import re 

if len(sys.arguments)!=2:
    print("entry format = ./chatserver ip:port ")
    sys.exit()

server = socket.socket(socket.AFINET, socket.SOCKSTREAM)
server.setsockopt(socket.SOLSOCKET, socket.SOREUSEADDR, 1)


info = (sys.argv[1])
x=info.split(':')
iPaddress=str(x[0])
port=int(x[1])

server.bind((iPaddress,port))
server.listen(100)
print('Im Jhansi, Welcome to the chat server')
print('Waiting for connections')


clients=[]
clients.append(server)

def clientthread(conn,addr):
    while True:
        
        try:
            nick=conn.recv(2048).decode('utf-8')
            nick1=nick.strip('NICK ')
            regex = re.compile('[@!#$%^&*()?/|}{~:]')
            
            if(regex.search(nick1) == None) and len(nick1)<=12 and 'NICK ' in nick :
                conn.sendall('OK'.encode('utf-8'))
                break
            elif len(nick1) or regex.search(nick1) != None:
                conn.sendall('ERR malformed nick name'.encode('utf-8'))
            else:
                conn.close()
                print(address[0]+" disconnected")
                clients.remove(conn)
                del clients[conn]
                break
        except :
                break

        

    while True:
        try:
            if conn in clients:
                msg = conn.recv(2048).decode('utf-8')
                msg1=msg.strip('MSG ')
                #print(len(msg1))
            
                if not msg:
                    conn.close()
                    print(address[0]+" has been disconnected")
                    clients.remove(conn)
                    break 

                elif 'MSG ' not in msg:
                    conn.sendall('ERROR malformed msg'.encode('utf-8'))
                else:

                
                    if len(msg1)<=255 :
                    
                        count=0
                        for i in msg1[:-1]:
                            if ord(i)<31:
                            
                                count = count +1
                            
                            else:
                                pass
                           
                        if count != 0:
                            conn.sendall('ERROR -> dont use control characters'.encode('utf-8'))
                        else:
                            messagetosend = 'MSG '+nick1+' ' + msg1[:-1]
                
                            broadcasting(messagetosend,conn,nick1)
                    elif len(msg1) > 255 :
                        conn.sendall('ERROR -> message length exceeding 256 characters'.encode('utf-8'))
                   
                

        except KeyboardInterrupt:
            conn.close()
            break

def broadcasting(msg,connection,nick1):
    for sockets in clients:
        if sockets!= server:
            try:
                sockets.sendall(msg.encode('utf-8'))
            except KeyboardInterrupt:
                    clients.remove(sockets)
                    break 



while True:
    conn,addr=server.accept()
    #accepts connections 
    conn.sendall('Hello 1'.encode('utf-8'))
    clients.append(conn)
    print(address[0]+" has connected")
    
    startnewthread(clientthread,(conn,addr))
    #starts a new process for every new client 

conn.close()
server.close() 
